==============================================================================
------------------------------------------------------------------------------
A collection of types to be included / used in other Lua files.

These types are either required by the Lua API or required for the normal
operation of this Lua plugin.

------------------------------------------------------------------------------
*copy_diagnostics.Configuration*
   The user's customizations for this plugin.

Fields ~
    {commands} copy_diagnostics.ConfigurationCommands?
       Customize the fallback behavior of all `:CopyDiagnostics` commands.
    {logging} copy_diagnostics.LoggingConfiguration?
       Control how and which logs print to file / Neovim.
    {tools} copy_diagnostics.ConfigurationTools?
       Optional third-party tool integrations.

------------------------------------------------------------------------------
*copy_diagnostics.ConfigurationCommands*
   Customize the fallback behavior of all `:CopyDiagnostics` commands.

Fields ~
    {goodnight_moon} copy_diagnostics.ConfigurationGoodnightMoon?
       The default values when a user calls `:CopyDiagnostics goodnight-moon`.
    {hello_world} copy_diagnostics.ConfigurationHelloWorld?
       The default values when a user calls `:CopyDiagnostics hello-world`.

------------------------------------------------------------------------------
*copy_diagnostics.ConfigurationGoodnightMoon*
   The default values when a user calls `:CopyDiagnostics goodnight-moon`.

Fields ~
    {read} copy_diagnostics.ConfigurationGoodnightMoonRead?
       The default values when a user calls `:CopyDiagnostics goodnight-moon read`.

------------------------------------------------------------------------------
*copy_diagnostics.LoggingConfiguration*
   Control whether or not logging is printed to the console or to disk.

Fields ~
    {level} (
       | "trace"
       | "debug"
       | "info"
       | "warn" | "error"
       | "fatal"
       | vim.log.levels.DEBUG
       | vim.log.levels.ERROR
       | vim.log.levels.INFO
       | vim.log.levels.TRACE
       | vim.log.levels.WARN)?
       Any messages above this level will be logged.
    {use_console} `(boolean?)`
       Should print the output to neovim while running. Warning: This is very
       spammy. You probably don't want to enable this unless you have to.
    {use_file} `(boolean?)`
       Should write to a file.
    {output_path} `(string?)`
       The default path on-disk where log files will be written to.
       Defaults to "/home/selecaoone/.local/share/nvim/plugin_name.log".

------------------------------------------------------------------------------
*copy_diagnostics.ConfigurationGoodnightMoonRead*
   The default values when a user calls `:CopyDiagnostics goodnight-moon read`.

Fields ~
    {phrase} `(string)`
       The book to read if no book is given by the user.

------------------------------------------------------------------------------
*copy_diagnostics.ConfigurationHelloWorld*
   The default values when a user calls `:CopyDiagnostics hello-world`.

Fields ~
    {say} copy_diagnostics.ConfigurationHelloWorldSay?
       The default values when a user calls `:CopyDiagnostics hello-world say`.

------------------------------------------------------------------------------
*copy_diagnostics.ConfigurationHelloWorldSay*
   The default values when a user calls `:CopyDiagnostics hello-world say`.

Fields ~
    {repeat} `(number)`
       A 1-or-more value. When 1, the phrase is said once. When 2+, the phrase
       is repeated that many times.
    {style} "lowercase" | "uppercase"
       Control how the text is displayed. e.g. "uppercase" changes "hello" to "HELLO".

------------------------------------------------------------------------------
*copy_diagnostics.ConfigurationTools*
   Optional third-party tool integrations.

Fields ~
    {lualine} copy_diagnostics.ConfigurationToolsLualine?
       A Vim statusline replacement that will show the command that the user just ran.

------------------------------------------------------------------------------
*copy_diagnostics.ConfigurationToolsLualineData*
   The display values that will be used when a specific `copy_diagnostics`
   command runs.

Fields ~
    {color} vim.api.keyset.highlight?
       The foreground/background color to use for the Lualine status.
    {prefix} `(string?)`
       The text to display in lualine.

WARNING: This file is auto-generated. Do not edit it!

 vim:tw=78:ts=8:noet:ft=help:norl: